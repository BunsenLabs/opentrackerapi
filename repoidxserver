#!/usr/bin/env python3

from bottle import run, route, abort, response
import sys
import threading
import time
import requests
import datetime

PUBLIC = {}

class Fetcher(threading.Thread):
  DISTROS = {
      'hydrogen': [
        'https://eu.pkg.bunsenlabs.org/debian/dists/bunsen-hydrogen/main/binary-amd64/Packages',
        'https://eu.pkg.bunsenlabs.org/debian/dists/bunsen-hydrogen/main/binary-i386/Packages',
        'https://eu.pkg.bunsenlabs.org/debian/dists/bunsen-hydrogen/main/binary-armhf/Packages',
      ],
      'jessie-backports': [
        "https://eu.pkg.bunsenlabs.org/debian/dists/jessie-backports/main/binary-amd64/Packages",
        "https://eu.pkg.bunsenlabs.org/debian/dists/jessie-backports/main/binary-i386/Packages",
        "https://eu.pkg.bunsenlabs.org/debian/dists/jessie-backports/main/binary-armhf/Packages"],
      ],
      'unstable': [
        "https://eu.pkg.bunsenlabs.org/debian/dists/unstable/main/binary-amd64/Packages",
        "https://eu.pkg.bunsenlabs.org/debian/dists/unstable/main/binary-i386/Packages"
      ]
  }
  def run(self):
    self.event = threading.Event()
    self.update()
    while not self.event.wait(timeout=900):
      self.update()

  def update(self):
    data = dict()
    for d in self.DISTROS:
      for packlist in self.DISTROS[d]:
        self.parse_packlist(data, packlist)
    global PUBLIC
    PUBLIC = data

  def parse_packlist(data, packlist):
    pass

@route('/repository/index')
def index():
  return PUBLIC

if __name__ == "__main__":
  fetcher = Fetcher()
  fetcher.start()
  run(host="localhost", port=10102)
